Вариант 22

1.Разработать класс "вектор целых чисел" в соответствии со следующим заданием:

Состояние класса -

Вектор включает в себя элементы типа int и определяется размером (количество элементов в векторе) и значениями своих элементов, например: вектор из 6 элементов {12, 8, 5, -3, 11, 5}. Память под вектор выделяется статически, во время компиляции, и задается массивом фиксированного предельного значения (например, максимальный размер вектора 100 элементов).

Протокол класса -

Определяет возможности создания и инициализации экземпляров класса и правила использования их (методы класса).

Предусмотреть следующие возможности:

·          пустой конструктор для инициализации экземпляров и массивов экземпляров класса по умолчанию;

·          создание экземпляров класса с инициализацией единственным элементом вектора;

·          создание экземпляров класса с инициализацией размером и массивом значений элементов вектора;

·          ввод экземпляров класса из входного потока и вывод их значений в выходной поток;

·          выполнение операции сложения двух векторов (реализуется как покомпонентное сложение двух векторов);

·          выделение части вектора указанной длины, начиная с элемента, заданного его порядковым номером в векторе;

·          выполнение операции включения в вектор нового элемента;

·          упорядочение вектора по возрастанию;

·          нахождение максимального элемента в векторе.

2. Проектирование класса рекомендуется начать с представления состояния класса, учитывающего заданные операции, а затем реализации конструкторов и метода вывода. Для отладки и исчерпывающего тестирования других методов разработанного класса реализовать диалоговую программу, которая позволяет вводить параметры отлаживаемых методов. Для обработки ошибочных ситуаций использовать механизм исключительных ситуаций.

3. Повторить разработку класса, реализовав отдельные методы (там, где это оправданно), перегруженными операторами. Состав перегруженных операторов целесообразно согласовать с преподавателем.

4. Еще раз повторить разработку класса при условии, что память под массив необходимой длины выделяется динамически, во время выполнения программы (с помощью оператора new; память задается указателем на char в состоянии класса). Для хранения данных в экземпляре класса не должна использоваться лишняя память.

Дополнить интерфейс класса следующими возможностями:

·          создание экземпляра класса с его инициализацией другим экземпляром класса (копирующий конструктор);

·          переопределение экземпляра класса (с помощью перегруженного оператора присваивания).

Разработать и реализовать прикладную программу, использующую класс, разработанный другим студентом. Задание для прикладной программы разработать самостоятельно и согласовать с преподавателем.

